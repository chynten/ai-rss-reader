plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
	id 'com.bmuschko.docker-remote-api' version '9.4.0'
}

import com.bmuschko.gradle.docker.tasks.image.*

group = 'ai.rss.reader'
version = '0.0.1-SNAPSHOT'


java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(24)
	}
}

jar {
    enabled = false
}
tasks.named('bootJar') {
    archiveFileName = 'ai-rss-reader.jar'
}

task dockerBuild(type: DockerBuildImage) {
	inputDir = file('.')
	images = ['chintanpatel/rss-reader:' + project.version]
}

test.finalizedBy jacocoTestReport
build.finalizedBy(dockerBuild)
dockerBuild.dependsOn jacocoTestReport

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url = uri('https://repository.aspose.com/repo/')
	}
}

ext {
	set('springAiVersion', "1.0.0")
}

dependencies {
	//implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	//implementation 'org.flywaydb:flyway-core'
	//implementation 'org.flywaydb:flyway-mysql'
	implementation 'org.springframework.ai:spring-ai-starter-model-ollama'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'net.dankito.readability4j:readability4j:1.0.8'
	implementation 'com.apptasticsoftware:rssreader:3.9.3'
	implementation 'org.jsoup:jsoup:1.20.1'
	compileOnly 'org.projectlombok:lombok'
	//runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	//testImplementation 'org.mockito:mockito-core'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.required = false
		csv.required = false
		html.required = true
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = 'PACKAGE'
			includes = ['ai.feed.reader.clients.*']
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.7
			}
		}
		rule {
			element = 'PACKAGE'
			includes = ['ai.feed.reader.clients.*']
			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.8
			}
		}
	}	
}